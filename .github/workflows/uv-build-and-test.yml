# vim: set ft=yaml ts=2 sw=2:
name: Build and Test
on:
  workflow_call:
    inputs:
      matrix-os-version:
        description: "JSON array as a string, a list of operating systems for the matrix build"
        required: true
        type: string
      matrix-python-version:
        description: "JSON array as a string, a list of Python versions for the matrix build"
        required: true
        type: string
      test-suite-command:
        description: "Shell command used to execute the test suite"
        required: false
        type: string
        default: "./run suite"
      timeout-minutes:
        description: "Job timeout in minutes"
        required: false
        type: number
        default: 30
      enable-coveralls:
        description: "Whether to enable coverage reporting to coveralls.io"
        required: false
        type: boolean
        default: false
      persist-python-version:
        description: "Which matrix Python version to persist artifacts for, if any"
        required: false
        type: string
        default: "none"  # default will never match ${{ matrix.python }}, so we default to not persisting
jobs:
  build:
    name: "Build"
    strategy:
      matrix:
        os: "${{ fromJson(inputs.matrix-os-version) }}"
        python: "${{ fromJson(inputs.matrix-python-version) }}"
    defaults:
      run:
        shell: bash
    runs-on: "${{ matrix.os }}"
    timeout-minutes: "${{ inputs.timeout-minutes }}"
    steps: 
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pinned to SHA for v4.2.2
        with:
          # We need fetch-depth=0 so that tags are pulled.  Unfortunately, this also pulls
          # along all history, so it's much slower for repos with lots of commits.  I've
          # experimented with fetch-tags=true, which in theory would let us pull tags
          # without the hit of fetching all history, but it never works as expected.
          fetch-depth: 0
          persist-credentials: false
      - name: Install UV
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # pinned to SHA for v6.7.0
        with:
          version-file: "pyproject.toml"  # controlled by required-version in the [tool.uv] section
          python-version: "${{ matrix.python }}"
          enable-cache: true
      - name: Install dependencies
        run: |
          # Install dependencies
          ./run install
      - name: Cache .ruff_cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # pinned to SHA for v4.2.4
        with:
          path: ".ruff_cache"
          key: "ruff-cache|${{ runner.os }}|${{ env.UV_PYTHON }}|${{ hashFiles('**/uv.lock') }}"
      - name: Cache .mypy_cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # pinned to SHA for v4.2.4
        with:
          path: ".mypy_cache"
          key: "mypy-cache|${{ runner.os }}|${{ env.UV_PYTHON }}|${{ hashFiles('**/uv.lock') }}"
      - name: Run test suite
        run: |
          # Run the test suite
          ${{ inputs.test-suite-command }}
      - name: Build artifacts
        if: "${{ inputs.persist-python-version == matrix.python }}"
        run: |
          # Build artifacts
          ./run build
      - name: Persist artifacts
        if: "${{ inputs.persist-python-version == matrix.python }}"
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # pinned to SHA for v4.4.3
        with:
          name: "python-package-distributions"
          path: "dist/"
      - name: Upload coverage data to coveralls.io
        if: "${{ inputs.enable-coveralls }}"
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # pinned to SHA for v2.3.6
        with:
          fail-on-error: false
          flag-name: "${{ runner.os }}-python${{ matrix.python }}"
          parallel: true
          file: ".coverage.lcov"
  coveralls:
    name: "Coveralls"
    if: "${{ inputs.enable-coveralls }}"
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: "${{ inputs.timeout-minutes }}"
    steps:
    - name: Upload coverage data to coveralls.io
      uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # pinned to SHA for v2.3.6
      with:
        fail-on-error: false
        parallel-finished: true
