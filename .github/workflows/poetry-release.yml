# vim: set ft=yaml ts=2 sw=2:
name: Release
on:
  workflow_call:
    inputs:
      os-version:
        description: "Operating system to use for the build"
        required: false
        type: string
        default: "ubuntu-latest"
      timeout-minutes:
        description: "Job timeout in minutes"
        required: false
        type: number
        default: 30
      publish-pypi:
        description: "Whether to publish artifacts to PyPI"
        required: false
        type: boolean
        default: false
jobs:
  publish:
    name: "Publish"
    defaults:
      run:
        shell: bash
    runs-on: "${{ inputs.os-version }}"
    timeout-minutes: "${{ inputs.timeout-minutes }}"
    steps: 
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pinned to SHA for v4.2.2
        with:
          persist-credentials: false
      - name: Retrieve artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pinned to SHA for v4.1.8
        with:
          name: "python-package-distributions"
          path: "dist/"
      - name: Generate release notes
        run: |
          # Generate release notes
          echo "## Changes" > "${{ runner.temp }}/changes.md"
          sed -n '/^Version /{:a;n;/^Version /q;p;$!ba}' Changelog | sed 's/^\s*\*/-/' | sed 's/\.$//' >> "${{ runner.temp }}/changes.md"
          cat "${{ runner.temp }}/changes.md"
      - name: Publish to PyPI
        if: "${{ inputs.publish-pypi }}"
        uses: pypa/gh-action-pypi-publish@67339c736fd9354cd4f8cb0b744f2b82a74b5c70 # pinned to SHA for v1.12.3
        with:
          password: "${{ secrets.PYPI_TOKEN }}"
          packages-dir: "dist/"
      - name: Create GitHub release
        uses: softprops/action-gh-release@e7a8f85e1c67a31e6ed99a94b41bd0b71bbee6b8 # pinned to SHA for v2.0.9
        with:
          name: "Release ${{ github.ref_name }}"
          body_path: "${{ runner.temp }}/changes.md"
          files: 'dist/*'
          fail_on_unmatched_files: true
