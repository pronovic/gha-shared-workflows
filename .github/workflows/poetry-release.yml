# vim: set ft=yaml ts=2 sw=2:
name: Release
on:
  workflow_call:
    inputs:
      os-version:
        description: "Operating system to use for the build"
        required: false
        type: string
        default: "ubuntu-latest"
      python-version:
        description: "Version of Python to use for the build"
        required: true
        type: string
      poetry-version:
        description: "Version of Poetry to use for the build (>=1.8.0)"
        required: false
        default: "1.8.4"
        type: string
      plugin-version:
        description: "Version of the poetry-dynamic-versioning plugin to use for the build (>=1.2.0)"
        required: false
        default: "1.3.0"
        type: string
      poetry-plugins:
        description: "Comma-separated list of Poetry plugins to install, in addition to poetry-dynamic-versioning"
        required: false
        type: string
        default: ""
      poetry-cache-venv:
        description: "Whether to cache the Poetry virtualenv"
        required: false
        type: boolean
        default: true
      poetry-cache-install:
        description: "Whether to cache the Poetry install"
        required: false
        type: boolean
        default: true
      timeout-minutes:
        description: "Job timeout in minutes"
        required: false
        type: number
        default: 30
      publish-pypi:
        description: "Whether to publish artifacts to PyPI"
        required: false
        type: boolean
        default: false
jobs:
  publish:
    name: "Publish"
    defaults:
      run:
        shell: bash
    runs-on: "${{ inputs.os-version }}"
    timeout-minutes: "${{ inputs.timeout-minutes }}"
    steps: 
      - name: Check out code
        uses: actions/checkout@v4
        with:
          # We need fetch-depth=0 so that tags are pulled.  Unfortunately, this also pulls
          # along all history, so it's much slower for repos with lots of commits.  I've
          # experimented with fetch-tags=true, which in theory would let us pull tags
          # without the hit of fetching all history, but it never works as expected.
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ inputs.python-version }}"
      - name: Setup Poetry
        uses: pronovic/setup-poetry@v2
        with:
          version: "${{ inputs.poetry-version }}"
          plugins: "poetry-dynamic-versioning==${{ inputs.plugin-version }},${{ inputs.poetry-plugins }}"
          cache-venv: "${{ inputs.poetry-cache-venv }}"
          cache-poetry: "${{ inputs.poetry-cache-install }}"
          cache-suffix: "${{ inputs.plugin-version }}"  # safest to bump this when upgrading plugin above
      - name: Install dependencies
        run: |
          # Install dependencies
          ./run install
      - name: Generate release notes
        run: |
          # Generate release notes
          echo "## Changes" > "${{ runner.temp }}/changes.md"
          sed -n '/^Version /{:a;n;/^Version /q;p;$!ba}' Changelog | sed 's/^\s*\*/-/' | sed 's/\.$//' >> "${{ runner.temp }}/changes.md"
          cat "${{ runner.temp }}/changes.md"
      - name: Build artifacts
        run: |
          # Build artifacts
          ./run build
      - name: Publish to PyPI
        if: "${{ inputs.publish-pypi }}"
        env:
          POETRY_PYPI_TOKEN_PYPI: "${{ secrets.PYPI_TOKEN }}"
        run: |
          # Publish to PyPI
          poetry publish
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{ github.ref_name }}"
          body_path: "${{ runner.temp }}/changes.md"
          files: 'dist/*'
          fail_on_unmatched_files: true
